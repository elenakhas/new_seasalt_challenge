# This workflow will install the latest version of Python and its dependencies,
# the packages required for the code to run, train a model with minimal train set (10% of the data)
# to make sure the code runs end-to-end. The model testing is performed on the full test set,
# the model file is created but not uploaded.

name: Test MNIST model

on:
  pull_request:

jobs:
  build_and_test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi 
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
        # use default flake8 settings - it will stop the build if any errors are detected
        flake8 .
        
# skip testing as no tests are given
#     - name: Test with pytest
#       run: |
#         pytest
    - name: Execute code with min train set
      run: |
        python main.py --min_train
          
